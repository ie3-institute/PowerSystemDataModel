/* Maven publish - start */

tasks.register("sourcesJar", Jar) {
  archiveClassifier.set("sources")
  from sourceSets.main.allJava
}

tasks.register("javadocJar", Jar) {
  dependsOn tasks.named("javadoc", Javadoc)
  archiveClassifier.set("javadoc")
  from { tasks.named("javadoc", Javadoc).get().destinationDir }
}

if (project.hasProperty('user') && project.hasProperty('password') && project.hasProperty('deployVersion')) {

  // snapshot version differs from normal version
  String versionString = project.getProperty('deployVersion')

  publishing {
    publications {
      create("mavenJava", MavenPublication) {

        versionMapping {
          // resolves dynamic versioning to current version number
          usage('java-api') {
            fromResolutionOf('runtimeClasspath')
          }
          usage('java-runtime') {
            fromResolutionResult()
          }
        }
        pom {
          description = 'Elaborated data model to model energy systems with a high granularity @ the Institute of Energy Systems, Energy Efficiency and Energy Economics (ie3) @ TU Dortmund University'
          name = 'Power System Data Model'
          url = 'https:github.com/ie3-institute/PowerSystemDatamodel'
          organization {
            name = 'Institute of Energy Systems, Energy Efficiency and Energy Economics (ie3)/TU Dortmund University'
            url = 'https:www.ie3.tu-dortmund.de/'
          }
          issueManagement {
            system = 'GitHub'
            url = 'https:github.com/ie3-institute/PowerSystemDataModel/issues'
          }
          licenses {
            license {
              name = 'BSD 3-Clause License'
              url = 'https:github.com/ie3-institute/PowerSystemDataModel/blob/master/LICENSE'
            }
          }
          developers {
            developer {
              organization = "Institute of Energy Systems, Energy Efficiency and Energy Economics (ie3)/TU Dortmund University"
              organizationUrl = "https:ie3.etit.tu-dortmund.de"
            }
          }
          scm {
            connection = 'scm:git:git:github.com/ie3-institute/PowerSystemDataModel.git'
            developerConnection = 'scm:git:ssh:github.com:ie3-institute/PowerSystemDataModel.git'
            url = 'https:github.com/ie3-institute/PowerSystemDataModel'
          }
        }

        removeTestDependenciesFromPom(pom)
        groupId = group
        artifactId = 'PowerSystemDataModel'
        version = versionString

        from components.java
        artifact sourcesJar
        artifact javadocJar
      }
    }
    repositories {
      maven {
        def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
        def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
        url = versionString.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        credentials {
          username project.getProperty('user')
          password project.getProperty('password')
        }
      }
    }
    signing {
      useInMemoryPgpKeys(
          findProperty('signingKey') as String,
          findProperty('signingPassword') as String
          )
      sign publications.mavenJava
    }
  }

  tasks.named("generatePomFileForMavenJavaPublication") {
    destination = layout.buildDirectory.file("generated-pom.xml").get().asFile
  }
}

def removeTestDependenciesFromPom(pom) {
  pom.withXml {
    def root = asNode()
    // eliminate test-scoped dependencies (no need in maven central POMs)
    root.dependencies.removeAll { dep ->
      dep.scope == "test"
    }
  }
}

/* Maven publish - end */
