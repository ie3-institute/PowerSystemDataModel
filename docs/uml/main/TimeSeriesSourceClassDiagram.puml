@startuml

note "Assuming all classes to implement \nthe abstract methods of their interfaces\n\n" as generalNotes

abstract class TimeSeriesSource<V extends Value> {
    - Class<V> valueClass
    - TimeBasedSimpleValueFactory<V> valueFactory
    - {abstract} IndividualTimeSeries<V> getTimeSeries()
    - {abstract} IndividualTimeSeries<V> getTimeSeries(ClosedInterval<ZonedDateTime>))
    - {abstract} Optional<V> getValue(ZonedDateTime)
}

TimeSeriesSource <|-- CsvTimeSeriesSource
TimeSeriesSource <|-- SqlTimeSeriesSource

class CsvTimeSeriesSource<V extends Value> {
    - IndividualTimeSeries<V> timeSeries
    - CsvDataSource dataSource
    + {static} CsvTimeSeriesSource<? extends Value> getSource(\n\tString,\n\tString,\n\tEntityPersistenceNamingStrategy,\n\tCsvFileConnector.CsvIndividualTimeSeriesMetaInformation)
    - CsvTimeSeriesSource(\n\tString,\n\tString,\n\tFileNamingStrategy,\n\tUUID,\n\tString,\n\tClass<V>,\n\tTimeBasedSimpleValueFactory<V>)
}

class SqlTimeSeriesSource<V extends Value> {
    - SqlDataSource dataSource
    - UUID timeSeriesUuid
    - SqlTimeSeriesSource(SqlDataSource, UUID, Class<V>, TimeBasedSimpleValueFactory<V>)
    - SqlTimeSeriesSource(SqlConnector, String, DatabaseNamingStrategy, UUID, Class<V>, TimeBasedSimpleValueFactory<V>)
    + {static} SqlTimeSeriesSource<? extends Value> createSource(SqlConnector, String, DatabaseNamingStrategy, IndividualTimeSeriesMetaInformation, String)
    + {static} SqlTimeSeriesSource<T> create(SqlConnector, String, DatabaseNamingStrategy, UUID, Class<T>, String)
}

abstract class TimeSeriesMappingSource {
    - TimeSeriesMappingFactory mappingFactory
    - Map<UUID, UUID> getMapping()
    - Optional<UUID> getTimeSeriesUuid(UUID)
    {abstract} Stream<Map<String, String>> getMappingSourceData()
}

TimeSeriesMappingSource <|-- CsvTimeSeriesMappingSource
TimeSeriesMappingSource <|-- SqlTimeSeriesMappingSource

class CsvTimeSeriesMappingSource {
    - CsvDataSource dataSource
    - CsvTimeSeriesMappingSource(String, String, FileNamingStrategy)
}

class SqlTimeSeriesMappingSource {
    - EntityPersistenceNamingStrategy entityPersistenceNamingStrategy
    - SqlDataSource dataSource
    - SqlTimeSeriesMappingSource(SqlConnector, String, EntityPersistenceNamingStrategy)
}

interface TimeSeriesMetaInformationSource {
    - {abstract} Map<UUID, IndividualTimeSeriesMetaInformation> getTimeSeriesMetaInformation()
    - {abstract} Optional<IndividualTimeSeriesMetaInformation> getTimeSeriesMetaInformation(UUID)
}

TimeSeriesMetaInformationSource <|.. CsvTimeSeriesMetaInformationSource
TimeSeriesMetaInformationSource <|.. SqlTimeSeriesMetaInformationSource

class CsvTimeSeriesMetaInformationSource {
    - CsvDataSource dataSource
    - Map<UUID, CsvIndividualTimeSeriesMetaInformation> timeSeriesMetaInformation
    - CsvTimeSeriesMetaInformationSource(String, String, FileNamingStrategy)
}

class SqlTimeSeriesMetaInformationSource {
    - DatabaseNamingStrategy namingStrategy
    - Map<UUID, IndividualTimeSeriesMetaInformation> mapping
    - SqlDataSource dataSource
    - SqlTimeSeriesMetaInformationSource(SqlConnector, String, DatabaseNamingStrategy)
}
@enduml