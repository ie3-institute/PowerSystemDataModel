plugins {
  id 'java' //java support
  id 'groovy' // groovy support
  id 'maven-publish'
  id 'signing'
  id 'pmd' // code check, working on source code
  id 'com.diffplug.spotless' version '6.11.0'//code format
  id 'com.github.spotbugs' version '5.0.12' // code check, working on byte code
  id 'de.undercouch.download' version '5.2.1'
  id 'kr.motd.sphinx' version '2.10.1' // documentation generation
  id 'jacoco' // java code coverage plugin
  id "org.sonarqube" version "3.4.0.2513" // sonarqube
  id 'net.thauvin.erik.gradle.semver' version '1.0.4' // semantic versioning
}

ext {
  //version (changing these should be considered thoroughly!)
  javaVersion = JavaVersion.VERSION_17
  tscfgVersion = '0.9.9'
  testcontainersVersion = '1.17.4'

  scriptsLocation = 'gradle' + File.separator + 'scripts' + File.separator //location of script plugins
}

group = 'com.github.ie3-institute'
description = 'PowerSystemDataModel'
sourceCompatibility = javaVersion
targetCompatibility = javaVersion

apply from: scriptsLocation + 'tests.gradle'
apply from: scriptsLocation + 'pmd.gradle'
apply from: scriptsLocation + 'spotbugs.gradle'
apply from: scriptsLocation + 'spotless.gradle'
apply from: scriptsLocation + 'checkJavaVersion.gradle'
apply from: scriptsLocation + 'documentation.gradle'
apply from: scriptsLocation + 'jacoco.gradle' // jacoco java code coverage
apply from: scriptsLocation + 'mavenCentralPublish.gradle'
apply from: scriptsLocation + 'sonarqube.gradle'
apply from: scriptsLocation + 'vcs.gradle'
apply from: scriptsLocation + 'semVer.gradle'

repositories {
  mavenCentral() // searches in Sonatype's repository 'Maven Central'
  maven { url 'https://www.jitpack.io' } // allows github repos as dependencies

  // sonatype snapshot repo
  maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }

}

dependencies {
  constraints {
    implementation( 'junit:junit:4.13.2+'){
      because "CVE-2020-15250 - Temporary folder vulnerability - https://github.com/advisories/GHSA-269g-pwp5-87pp"
    }
  }

  //	 ieÂ³ power system utils
  implementation 'com.github.ie3-institute:PowerSystemUtils:2.0-SNAPSHOT'

  implementation 'tech.units:indriya:2.1.3'

  implementation 'com.github.johanneshiry:OSMonaut:v1.1.1' // tmp pbf parse

  // JTS Topology Suite for GeoPositions, License: EPL 1.0 / EDL 1.0
  implementation ('org.locationtech.jts:jts-core:1.19.0'){
    exclude group: 'junit', module: 'junit'
  }

  implementation 'org.locationtech.jts.io:jts-io-common:1.19.0'

  // Graphs
  implementation 'org.jgrapht:jgrapht-core:1.5.1'

  // testing
  testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
  testImplementation 'org.spockframework:spock-core:2.3-groovy-4.0'
  testImplementation 'org.objenesis:objenesis:3.3' // Mock creation with constructor parameters

  // testcontainers (docker framework for testing)
  testImplementation "org.testcontainers:testcontainers:$testcontainersVersion"
  testImplementation "org.testcontainers:spock:$testcontainersVersion"
  testImplementation "org.testcontainers:influxdb:$testcontainersVersion"
  testImplementation "org.testcontainers:postgresql:$testcontainersVersion"
  testImplementation "org.testcontainers:couchbase:$testcontainersVersion"

  // logging
  implementation platform('org.apache.logging.log4j:log4j-bom:2.19.0')
  implementation 'org.apache.logging.log4j:log4j-api' // log4j
  implementation 'org.apache.logging.log4j:log4j-core' // log4j
  implementation 'org.apache.logging.log4j:log4j-slf4j-impl' // log4j -> slf4j

  // Databases
  implementation 'org.influxdb:influxdb-java:2.23'
  implementation 'com.couchbase.client:java-client:3.3.4'
  runtimeOnly 'org.postgresql:postgresql:42.5.0' // postgresql jdbc driver required during runtime

  implementation 'commons-io:commons-io:2.11.0' // I/O functionalities
  implementation 'org.apache.commons:commons-compress:1.21' // I/O functionalities
  implementation 'org.apache.commons:commons-lang3:3.12.0'

}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

tasks.withType(Javadoc){
  options.encoding = 'UTF-8'
  failOnError = false // TODO: Temp until JavaDoc issues are resolved
}

task printVersion {
  doLast {
    println project.version
  }
}
