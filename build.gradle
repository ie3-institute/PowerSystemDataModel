plugins {
	id 'java' //java support
	id 'groovy' // groovy support
	id 'maven-publish'
	id 'signing'
	id 'pmd' // code check, working on source code
	id 'com.diffplug.spotless' version '5.12.4'//code format
	id 'com.github.spotbugs' version '4.7.1' // code check, working on byte code
	id 'com.github.onslip.gradle-one-jar' version '1.0.6' // pack a self contained jar
	id 'de.undercouch.download' version '4.1.1'
	id 'kr.motd.sphinx' version '2.10.1' // documentation generation
	id 'jacoco' // java code coverage plugin
	id "org.sonarqube" version "3.2.0" // sonarqube
	id 'net.thauvin.erik.gradle.semver' version '1.0.4' // semantic versioning
}

ext {
	//version (changing these should be considered thoroughly!)
	javaVersion = JavaVersion.VERSION_1_8
	tscfgVersion = '0.9.9'
	testcontainersVersion = '1.15.2'

	scriptsLocation = 'gradle' + File.separator + 'scripts' + File.separator //location of script plugins
}

group = 'com.github.ie3-institute'
description = 'PowerSystemDataModel'
sourceCompatibility = javaVersion
targetCompatibility = javaVersion

apply from: scriptsLocation + 'tests.gradle'
apply from: scriptsLocation + 'pmd.gradle'
apply from: scriptsLocation + 'spotbugs.gradle'
apply from: scriptsLocation + 'spotless.gradle'
apply from: scriptsLocation + 'checkJavaVersion.gradle'
apply from: scriptsLocation + 'selfContainedJar.gradle'
apply from: scriptsLocation + 'documentation.gradle'
apply from: scriptsLocation + 'jacoco.gradle' // jacoco java code coverage
apply from: scriptsLocation + 'mavenCentralPublish.gradle'
apply from: scriptsLocation + 'sonarqube.gradle'
apply from: scriptsLocation + 'vcs.gradle'
apply from: scriptsLocation + 'semVer.gradle'

repositories {
	mavenCentral() // searches in Sonatype's repository 'Maven Central'
	maven { url 'https://www.jitpack.io' } // allows github repos as dependencies

	// sonatype snapshot repo
	maven { url 'http://oss.sonatype.org/content/repositories/snapshots' }

}

dependencies {
	//	 ieÂ³ power system utils
	compile 'com.github.ie3-institute:PowerSystemUtils:1.5.2'

	implementation 'tech.units:indriya:2.1.2'

	// JTS Topology Suite for GeoPositions, License: EPL 1.0 / EDL 1.0
	compile 'org.locationtech.jts:jts-core:1.18.1'
	compile 'org.locationtech.jts.io:jts-io-common:1.18.1'

	// Graphs
	compile 'org.jgrapht:jgrapht-core:1.4.0'

	// testing
	testCompile 'org.junit.jupiter:junit-jupiter:5.7.1'
	testCompile 'org.spockframework:spock-core:2.0-groovy-3.0-SNAPSHOT'
	testCompile 'org.objenesis:objenesis:3.2' // Mock creation with constructor parameters

	// Testcontainers (Docker Framework for testing)
	testCompile "org.testcontainers:testcontainers:$testcontainersVersion"
	testCompile "org.testcontainers:spock:$testcontainersVersion"
	testCompile "org.testcontainers:influxdb:$testcontainersVersion"
	testCompile "org.testcontainers:postgresql:$testcontainersVersion"
	testCompile "org.testcontainers:couchbase:$testcontainersVersion"

	// logging
	compile 'org.apache.logging.log4j:log4j-api:+' // log4j
	compile 'org.apache.logging.log4j:log4j-core:+' // log4j
	compile 'org.apache.logging.log4j:log4j-slf4j-impl:+' // log4j -> slf4j

	// Databases
	compile 'org.influxdb:influxdb-java:2.21'
	compile 'com.couchbase.client:java-client:3.1.5'
	runtimeOnly 'org.postgresql:postgresql:42.2.20' // postgresql jdbc driver required during runtime


	compile 'commons-io:commons-io:2.8.0' // I/O functionalities
	compile 'org.apache.commons:commons-compress:+' // I/O functionalities
}

wrapper {
	gradleVersion = '6.0.1'
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
	//	options.compilerArgs << '-Xlint:unchecked'
	//	options.deprecation = true
}

task printVersion {
	doLast {
		println project.version
	}
}
